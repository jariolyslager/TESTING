name: develop
run-name: Develop workflow
on:
    push:
        branches: [ "develop" ]
    pull_request:
        branches: [ "develop" ]
    
jobs:
    # Build app with gradle and run unit tests
    build:
        name: Build and Run Tests
        runs-on: ubuntu-latest
        steps:
          - name: Checkout Code
            uses: actions/checkout@v4
          - name: Set up JDK 17
            uses: actions/setup-java@v4
            with:
                java-version: '17'
                distribution: 'temurin'
                         
          - name: Setup Gradle
            uses: gradle/actions/setup-gradle@ec92e829475ac0c2315ea8f9eced72db85bb337a # v3.0.0
            with:
                gradle-version: '8.5'
          - name: Build with Gradle 8.5
            run: gradle build
            
          - name: Run Gradle tests
            run: ./gradlew test
       
    
    analyze:
    # Analyze vulnerabilities with CodeQL
        name: Analyze
        runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
        timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
        permissions:
          security-events: write

          actions: read
          contents: read

        strategy:
          fail-fast: false
          matrix:
            language: [ 'java-kotlin' ]

        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Initialize CodeQL
          uses: github/codeql-action/init@v3
          with:
            languages: ${{ matrix.language }}

        - name: Autobuild
          uses: github/codeql-action/autobuild@v3

        - name: Perform CodeQL Analysis
          uses: github/codeql-action/analyze@v3
          with:
            category: "/language:${{matrix.language}}"
    
    run-lint:
    # Check code style with super-linter
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
            with:
              fetch-depth: 0

          - name: Lint Code Base
            uses: github/super-linter@v4
            env:
              VALIDATE_ALL_CODEBASE: false
              DEFAULT_BRANCH: "main"
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}